{
	"nodes":[
		{"color":"5","height":1080,"id":"f9b6aa7b457906e8","label":"Fleeting notes","styleAttributes":{},"type":"group","width":2056,"x":-1056,"y":-760,"zettelflowConfig":"{\"root\":true,\"actions\":[],\"label\":\"Fleeting notes\",\"childrenHeader\":\"\",\"targetFolder\":\"zettelFlow/fleeting\"}"},
		{"color":"#c18181","height":480,"id":"12dbfb008a4d0b73","label":"Task notes","styleAttributes":{},"type":"group","width":988,"x":-80,"y":-220,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"number\",\"hasUI\":true,\"id\":\"9abfc054-6063-498b-8798-0141a604e2cc\",\"zone\":\"frontmatter\"}],\"label\":\"New Task\",\"childrenHeader\":\"What kind of task is this?\",\"targetFolder\":\"zettelFlow/tasks\"}"},
		{"color":"2","height":360,"id":"81b8465370e8740c","label":"Literature notes","styleAttributes":{},"type":"group","width":776,"x":-960,"y":429,"zettelflowConfig":"{\"root\":true,\"actions\":[],\"label\":\"Literature notes\",\"childrenHeader\":\"\"}"},
		{"color":"3","height":440,"id":"cdeadec939256ce9","label":"Idea interactions","styleAttributes":{},"type":"group","width":562,"x":1200,"y":-760,"zettelflowConfig":"{\"root\":false,\"actions\":[],\"label\":\"Idea interactions\",\"childrenHeader\":\"What do you want to add?\"}"},
		{"color":"#446956","height":418,"id":"8ac8516446168314","label":"Start the day","styleAttributes":{},"type":"group","width":465,"x":80,"y":400,"zettelflowConfig":"{\"root\":true,\"actions\":[{\"type\":\"number\",\"hasUI\":true,\"id\":\"0e03f599-347d-4ea3-91cb-db8735b37eb6\",\"zone\":\"context\",\"description\":\"Real hours\",\"key\":\"realWorkingHours\",\"label\":\"Real working hours\",\"placeholder\":\"How many hours do your work the last day?\"},{\"type\":\"checkbox\",\"hasUI\":true,\"zone\":\"context\",\"id\":\"7d6d59a5-35e2-4660-aab3-9a05aff1a3a0\",\"description\":\"Goals achieved last day\",\"key\":\"goalsAchieved\",\"label\":\"Last day Goals achieve\"},{\"type\":\"checkbox\",\"hasUI\":true,\"zone\":\"context\",\"id\":\"17742384-6f31-4876-934e-e94929526ba3\",\"description\":\"Remote work\",\"key\":\"remoteWork\",\"label\":\"Do you work at home last day?\"},{\"type\":\"selector\",\"hasUI\":true,\"id\":\"74fe06bf-9b1b-467b-9095-90f1c648d26c\",\"zone\":\"context\",\"description\":\"Level of focus\",\"key\":\"focusLevel\",\"label\":\"Concentration of the last day\",\"options\":[[\"1\",\"Nothing at all\"],[\"2\",\"Less than usual\"],[\"3\",\"Usual\"],[\"4\",\"Mind at work\"],[\"5\",\"Nirvana\"]],\"defaultOption\":\"3\"},{\"type\":\"selector\",\"hasUI\":true,\"id\":\"e6c81c0a-4366-4957-af5d-3bf72b2f9097\",\"description\":\"Feeling of the day\",\"key\":\"dayFeeling\",\"label\":\"How was the feeling of the last day\",\"options\":[[\"1\",\"Was a horrible day!\"],[\"2\",\"Was a bad day\"],[\"3\",\"Normal\"],[\"4\",\"Was a nice day\"],[\"5\",\"What an incredible day!\"]],\"defaultOption\":\"3\",\"zone\":\"context\"},{\"type\":\"number\",\"hasUI\":true,\"id\":\"4921a416-f36c-4587-afd4-7f67ced4a27e\",\"zone\":\"context\",\"description\":\"Number of Breaks\",\"key\":\"numberOfBreaks\",\"label\":\"Number of intentional breaks\",\"placeholder\":\"Write here the number of breaks you had the last day\"}],\"label\":\"Start the day!\",\"childrenHeader\":\"\",\"targetFolder\":\"Daily\",\"optional\":false}"},
		{"height":116,"id":"c7ead17ed0de7735","styleAttributes":{},"text":"## Daily note actions\nRun Scripts to empowering the Daily template","type":"text","width":360,"x":-720,"y":-960,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"hasUI\":true,\"id\":\"34bd979a-2eb5-4da5-9b92-0b340f778239\",\"description\":\"Real hours last day\",\"key\":\"realWorkingHours\",\"label\":\"Real working hours\",\"placeholder\":\"How many hours do your work the last day?\",\"zone\":\"context\"},{\"type\":\"selector\",\"hasUI\":true,\"id\":\"37ba8eaa-c992-495a-863d-5587e3436672\",\"description\":\"Goals Achieved last day\",\"key\":\"goalsAchieved\",\"label\":\"Goals achieved the last day\",\"options\":[[\"false\",\"No\"],[\"true\",\"Yes\"]],\"defaultOption\":\"false\",\"zone\":\"context\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"set title\",\"code\":\"const today = moment().format(\\\"YYYY-MM-DD\\\");\\ncontext.today = today;\\nnote.setTitle(today);\\ncontent.modify(\\\"today\\\",today);\\n\\nconst nextDay = moment().add(1,'days').format(\\\"YYYY-MM-DD\\\");\\ncontent.modify(\\\"nextDay\\\",nextDay);\",\"id\":\"42ce77f6-7802-4a98-893f-78492a2cda37\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"find notes to archive\",\"code\":\"const currentFolder = app.vault.getAbstractFileByPath(note.getTargetFolder());\\ncontext.currentYearString = new Date().getFullYear().toString();\\n// Obtain all the notes of the folder (not recursive folders)\\ncontext.notesToArchive = currentFolder.children\\n  .filter(a => a.basename!==undefined)\\n  .sort((a,b) => b.basename.localeCompare(a.basename));\\ncontext.FOLDER_REGEX =/\\\\/[^\\\\/]+$/;\",\"id\":\"2d56c6e3-408f-430f-9867-0444243379cf\"},{\"type\":\"script\",\"hasUI\":false,\"id\":\"8da35c9f-bd25-4f7a-924d-b37a77b2aa54\",\"description\":\"Edit last day note\",\"code\":\"if(context.notesToArchive.length>0){\\n  const lastDayFile = context.notesToArchive.first();\\n  content.modify(\\\"previousDay\\\",lastDayFile.basename);\\n  await app.fileManager\\n     .processFrontMatter(lastDayFile, (frontmatter) => {\\n       frontmatter.realWorkingHours=context.realWorkingHours;\\nfrontmatter.goalsAchieved=context.goalsAchieved;\\n});\\n  let lastDayContent = await app.vault.read(lastDayFile);\\n  const NEXT_DAY_REGEX = /\\\\[\\\\[\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|Next day\\\\]\\\\]/;\\n  lastDayContent = lastDayContent.replaceAll(new RegExp(NEXT_DAY_REGEX, 'g'),`[[${context.today}|Next day]]`);\\n  await app.vault.modify(lastDayFile,lastDayContent);\\n}else{\\n  content.modify(\\n    \\\"previousDay\\\",\\n    moment().subtract(1, \\\"days\\\").format(\\\"YYYY-MM-DD\\\")\\n  );\\n}\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"archive notes\",\"code\":\"const baseFolder = note.getTargetFolder()+\\\"/\\\"+context.currentYearString;\\n// Create the folder if it does not exist\\nif (!await app.vault.adapter.exists(baseFolder)) {\\n  await app.vault.createFolder(baseFolder);\\n}\\n\\n// func to be called on loop\\nasync function archiveFiles(abstractFile){\\n\\tconst currentPathFolder = \\n    abstractFile.path.replace(context.FOLDER_REGEX, '');\\n\\tconst destinationPath = currentPathFolder + \\\"/\\\" + context.currentYearString + \\\"/\\\" \\n     + abstractFile.basename + \\\".\\\" + abstractFile.extension;\\n\\tapp.vault.rename(\\n\\t  abstractFile,\\n\\t  destinationPath\\n\\t);\\n}\\n\\ncontext.notesToArchive\\n  .forEach(\\n\\tfile => archiveFiles(file)\\n);\",\"id\":\"c4161508-2372-469e-9f24-c14445e0438f\"}],\"label\":\"daily actions\",\"childrenHeader\":\"\",\"targetFolder\":\"Daily\"}"},
		{"height":120,"id":"a3722ef8121b6d53","styleAttributes":{},"text":"# Idea note\nSave whats in your mind!\n","type":"text","width":290,"x":621,"y":-600,"zettelflowConfig":"{\"root\":false,\"actions\":[],\"label\":\"new idea\",\"childrenHeader\":\"\",\"targetFolder\":\"zettelFlow/fleeting/ideas\"}"},
		{"color":"2","file":"WorkFlow Test/actions/multi/Task required info.md","height":226,"id":"319d7d9795cfd714","styleAttributes":{},"type":"file","width":450,"x":-10,"y":-105},
		{"height":78,"id":"8e3bcace76cc69dd","styleAttributes":{},"text":"## External Scripts","type":"text","width":250,"x":-484,"y":571,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"script\",\"hasUI\":false,\"id\":\"6fac8215-8254-4772-a490-a1c027e7b209\",\"description\":\"lab external\",\"code\":\"const {tp,dv} = zf.external;\\n// Templater integration\\ntp.user.labExternal();\\n\\n// Dataview Integration;\\nconst myPage = dv.page(\\\"Daily/2023-12-04.md\\\");\\nconsole.log(myPage);\"},{\"type\":\"script\",\"hasUI\":false,\"id\":\"8ddf54ad-1177-4741-b8f6-573638899ffc\",\"description\":\"lab internal\",\"code\":\"// Custom Script\\nzf.internal.user.customScript()\"}],\"label\":\"external scripts\",\"childrenHeader\":\"\"}"},
		{"color":"6","height":243,"id":"6228b9bc20d300f6","styleAttributes":{},"text":"# Script actions\n- archive notes\n- modify links to the correct dates\n- Apply a template","type":"text","width":330,"x":665,"y":468,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"script\",\"hasUI\":false,\"description\":\"set title\",\"code\":\"const today = moment().format(\\\"YYYY-MM-DD\\\");\\ncontext.today = today;\\nnote.setTitle(today);\\nnote.setTargetFolder(\\\"Diary\\\");\\ncontent.modify(\\\"today\\\",today);\\n\\nconst nextDay = moment().add(1,'days').format(\\\"YYYY-MM-DD\\\");\\ncontent.modify(\\\"nextDay\\\",nextDay);\",\"id\":\"42ce77f6-7802-4a98-893f-78492a2cda37\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"find notes to archive\",\"code\":\"const currentFolder = app.vault.getAbstractFileByPath(note.getTargetFolder());\\ncontext.currentYearString = new Date().getFullYear().toString();\\n// Obtain all the notes of the folder (not recursive folders)\\ncontext.notesToArchive = currentFolder.children\\n  .filter(a => a.basename!==undefined)\\n  .sort((a,b) => b.basename.localeCompare(a.basename));\\ncontext.FOLDER_REGEX =/\\\\/[^\\\\/]+$/;\",\"id\":\"2d56c6e3-408f-430f-9867-0444243379cf\"},{\"type\":\"script\",\"hasUI\":false,\"id\":\"8da35c9f-bd25-4f7a-924d-b37a77b2aa54\",\"description\":\"Edit last day note\",\"code\":\"if (context.notesToArchive.length > 0) {\\n  const lastDayFile = context.notesToArchive.first();\\n  context.lastDayFile = lastDayFile;\\n\\n  content.modify(\\\"previousDay\\\", lastDayFile.basename);\\n\\n  await app.fileManager.processFrontMatter(lastDayFile, (frontmatter) => {\\n    frontmatter.realWorkingHours = context.realWorkingHours;\\n    frontmatter.goalsAchieved = context.goalsAchieved;\\n    frontmatter.numberOfBreaks = context.numberOfBreaks;\\n    frontmatter.remoteWork = context.remoteWork;\\n    frontmatter.dayFeeling = parseInt(context.dayFeeling);\\n    frontmatter.focusLevel = parseInt(context.focusLevel);\\n  });\\n\\n  let lastDayContent = await app.vault.read(lastDayFile);\\n\\n  // Actualización de la referencia \\\"Next day\\\"\\n  const NEXT_DAY_REGEX = /\\\\[\\\\[\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|Next day\\\\]\\\\]/g;\\n  lastDayContent = lastDayContent.replace(NEXT_DAY_REGEX, `[[${context.today}|Next day]]`);\\n\\n  // Eliminación del apartado \\\"### Current tasks\\\"\\n  const CURRENT_TASKS_REGEX = /### Current tasks[\\\\s\\\\S]*?(?=\\\\n###|\\\\n$)/g;\\n  lastDayContent = lastDayContent.replace(CURRENT_TASKS_REGEX, '');\\n\\n  // Guardar los cambios en el archivo\\n  await app.vault.modify(lastDayFile, lastDayContent);\\n} else {\\n  content.modify(\\n    \\\"previousDay\\\",\\n    moment().subtract(1, \\\"days\\\").format(\\\"YYYY-MM-DD\\\")\\n  );\\n}\\n\"},{\"type\":\"script\",\"hasUI\":false,\"id\":\"2105ba84-67bb-4431-b1aa-1cb8038ea078\",\"description\":\"Rollover Todos\",\"code\":\"const getAllUnfinishedTodos = async (file, tasksHeader) => {\\n    const contents = await this.app.vault.read(file);\\n    const contentsForDailyTasks = contents.split(tasksHeader)[1] || contents;\\n    const unfinishedTodosRegex = /\\\\t*- \\\\[ \\\\].*/g\\n    const unfinishedTodos = \\n     Array.from(contentsForDailyTasks.matchAll(unfinishedTodosRegex))\\n     .map(([todo]) => todo);\\n    const fileWithoutTasks = contents.split(/.*\\\\t*- \\\\[ \\\\].*\\\\n?/g).join('')\\n    await this.app.vault.modify(file,fileWithoutTasks)\\n    return unfinishedTodos;\\n}\\n  \\nconst defaultOptions = {\\n    tasksHeader: \\\"## TO DO\\\", \\n    prefix: '',\\n    suffix: \\\"❗\\\"\\n}\\nconst {tasksHeader, prefix, suffix } = { ...defaultOptions };\\n\\nconst lastDayFile = context.lastDayFile;\\n\\nif (!lastDayFile) {\\n    return;\\n}\\nconst unfinishedTodos = await getAllUnfinishedTodos(\\n        lastDayFile, \\n        tasksHeader\\n        );\\n\\nconst normalizedTodos = unfinishedTodos\\n    .map(task => `${prefix}${task}${suffix}`)\\n    .join('\\\\n');\\ncontent.modify(\\\"rolloverTodos\\\",normalizedTodos);\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"archive notes\",\"code\":\"const baseFolder = note.getTargetFolder()+\\\"/\\\"+context.currentYearString;\\n// Create the folder if it does not exist\\nif (!await app.vault.adapter.exists(baseFolder)) {\\n  await app.vault.createFolder(baseFolder);\\n}\\n\\n// func to be called on loop\\nasync function archiveFiles(abstractFile){\\n\\tconst currentPathFolder = \\n    abstractFile.path.replace(context.FOLDER_REGEX, '');\\n\\tconst destinationPath = currentPathFolder + \\\"/\\\" + context.currentYearString + \\\"/\\\" \\n     + abstractFile.basename + \\\".\\\" + abstractFile.extension;\\n\\tapp.vault.rename(\\n\\t  abstractFile,\\n\\t  destinationPath\\n\\t);\\n}\\n\\ncontext.notesToArchive\\n  .forEach(\\n\\tfile => archiveFiles(file)\\n);\",\"id\":\"c4161508-2372-469e-9f24-c14445e0438f\"}],\"label\":\"daily actions\",\"childrenHeader\":\"\",\"targetFolder\":\"Daily\"}"},
		{"color":"2","height":113,"id":"88d26d97e439fe01","styleAttributes":{},"text":"# Multimedia learning","type":"text","width":346,"x":494,"y":-19,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"placeholder\":\"Link to multimedia resource\",\"key\":\"multimedia\",\"label\":\"Prompt for Multimedia Link\",\"zone\":\"frontmatter\",\"hasUI\":true,\"id\":\"372b20c2-cb70-4d34-9313-be75a09988ad\",\"description\":\"Multimedia action\"}],\"label\":\"multimedia\",\"childrenHeader\":\"\"}"},
		{"file":"WorkFlow Test/templates/Daily Note Template.md","height":209,"id":"25a0d51fc8597314","styleAttributes":{},"type":"file","width":314,"x":172,"y":486},
		{"color":"3","file":"WorkFlow Test/root/Daily Note.md","height":940,"id":"98c25f3516181d5b","styleAttributes":{},"type":"file","width":839,"x":-960,"y":-680},
		{"color":"6","file":"WorkFlow Test/root/Meeting Note.md","height":120,"id":"029fd58cea9b4303","styleAttributes":{},"type":"file","width":561,"x":-67,"y":-680},
		{"color":"4","height":128,"id":"def2c3bfe7f9afdf","styleAttributes":{},"text":"# Social Events\n- Add a description of the event\n- Select the date","type":"text","width":559,"x":-67,"y":-521,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"key\":\"description\",\"label\":\"Description\",\"placeholder\":\"Write a description for the event\",\"hasUI\":true,\"description\":\"Description of the event\",\"id\":\"34e07b65-1be9-45af-81de-755f1334e474\"},{\"type\":\"calendar\",\"key\":\"eventDate\",\"label\":\"Date of the event\",\"hasUI\":true,\"description\":\"Event Date\",\"id\":\"195612f5-af95-4373-9883-e038cbac155d\"}],\"label\":\"Social event (multi action)\",\"childrenHeader\":\"\",\"targetFolder\":\"zettelFlow/fleeting/events\"}"},
		{"color":"#546d37","height":128,"id":"2e358bab4f00e48e","styleAttributes":{},"text":"# Configurable tags\n- Include tags dynamically","type":"text","width":360,"x":1296,"y":-707,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"tags\",\"description\":\"Add tags to the note\",\"hasUI\":true,\"id\":\"bdb5a2d8-5ae2-48f2-8bd5-1e4ebf9fc179\"}],\"label\":\"Add tags\",\"childrenHeader\":\"\"}"},
		{"color":"#108457","height":165,"id":"a35ac0726aca8026","styleAttributes":{},"text":"# Add a purpose\n- Include into the frontmatter the purpose of your idea","type":"text","width":350,"x":1306,"y":-540,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"placeholder\":\"write the purpose of your note here...\",\"key\":\"purpose\",\"label\":\"Purpose of your note\",\"zone\":\"frontmatter\",\"hasUI\":true,\"id\":\"0c14429f-9a74-4bc8-9ae1-7e5367414a0e\",\"description\":\"Purpose of the note\"}],\"label\":\"Add purpose (frontmatter)\",\"childrenHeader\":\"\",\"optional\":true}"},
		{"file":"WorkFlow Test/ZettelFlow scripts/Integrated Script.js","height":77,"id":"6f97c91bece56e3c","styleAttributes":{},"type":"file","width":400,"x":-924,"y":494},
		{"color":"#bc7171","height":91,"id":"c0372c42be0e9229","styleAttributes":{},"text":"## actions for literature \nembed actions!","type":"text","width":400,"x":-924,"y":649,"zettelflowConfig":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"placeholder\":\"write the purpose of your note here...\",\"key\":\"purpose\",\"label\":\"Purpose of your note\",\"zone\":\"frontmatter\",\"hasUI\":true,\"description\":\"Purpose of the note\",\"id\":\"658e1332-5247-4f9a-b841-859813516d27\"}],\"label\":\"Embed info\",\"childrenHeader\":\"\",\"optional\":true}"}
	],
	"edges":[
		{"color":"5","fromNode":"98c25f3516181d5b","fromSide":"top","id":"33823787b848177c","toNode":"c7ead17ed0de7735","toSide":"bottom"},
		{"color":"5","fromNode":"a3722ef8121b6d53","fromSide":"right","id":"3c5b72d5222b9c1c","toNode":"cdeadec939256ce9","toSide":"left"},
		{"fromNode":"25a0d51fc8597314","fromSide":"right","id":"106e8d2ba15aa7d5","toNode":"6228b9bc20d300f6","toSide":"left"}
	]
}