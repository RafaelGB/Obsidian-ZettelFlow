{
	"nodes":[
		{"id":"0fa3ad4f6c59ec01","type":"file","file":"WorkFlow Test/actions/multi/Social event (multi action).md","x":-159,"y":-720,"width":561,"height":80,"color":"4"},
		{"id":"abf3e213616b46a6","type":"file","file":"WorkFlow Test/root/Meeting Note.md","x":-159,"y":-459,"width":400,"height":90,"color":"6"},
		{"id":"905fabf82d23102c","type":"file","file":"WorkFlow Test/bridges/Idea Note.md","x":-159,"y":-169,"width":400,"height":74,"color":"2"},
		{"id":"8c82b7abd6cf87b6","type":"file","file":"WorkFlow Test/actions/prompt/Add section h1 - body.md","x":347,"y":-454,"width":507,"height":80},
		{"id":"3a191bd28ace9174","type":"file","file":"WorkFlow Test/actions/prompt/Purpose Prompt - frontmatter.md","x":534,"y":-250,"width":453,"height":81,"color":"#e19393"},
		{"id":"59fcfd179cd2455c","type":"file","file":"WorkFlow Test/root/Fleeting Notes.md","x":-1000,"y":-460,"width":400,"height":81,"color":"1"},
		{"id":"16c915c7a25378eb","type":"file","file":"WorkFlow Test/root/Literature Notes.md","x":-999,"y":345,"width":400,"height":88,"color":"3"},
		{"id":"46a5e54f5a9db71a","type":"text","text":"{\n  \"root\": false,\n  \"actions\": [\n    {\n      \"type\": \"prompt\",\n      \"placeholder\": \"write the purpose of your note here...\",\n      \"key\": \"purpose\",\n      \"label\": \"Purpose of your note\",\n      \"zone\": \"frontmatter\",\n      \"hasUI\": true,\n      \"description\": \"Purpose of the note\"\n    }\n  ],\n  \"label\": \"Embed info\",\n  \"childrenHeader\": \"\",\n  \"optional\": true\n}","x":-252,"y":342,"width":480,"height":91,"color":"#bc7171"},
		{"id":"f7c2b6af9c582d33","type":"file","file":"WorkFlow Test/actions/tags/configurable tags.md","x":534,"y":0,"width":453,"height":80,"color":"#bfa7ec"},
		{"id":"6f8c1e8e4db48802","type":"file","file":"WorkFlow Test/root/Task Note.md","x":-999,"y":667,"width":400,"height":93,"color":"5"},
		{"id":"ab4d5a15cffc7de3","type":"file","file":"WorkFlow Test/actions/multi/Task required info.md","x":-409,"y":600,"width":450,"height":228},
		{"id":"01e0bfcb96a5943c","type":"file","file":"WorkFlow Test/actions/prompt/Multimedia learning.md","x":-409,"y":1000,"width":400,"height":66,"color":"3"},
		{"id":"50233447a3a23290","type":"file","file":"WorkFlow Test/root/Daily Note.md","x":-240,"y":-940,"width":281,"height":50,"color":"3"},
		{"id":"f773b830c3d20fbf","type":"text","text":"{\"root\":false,\"actions\":[{\"type\":\"prompt\",\"hasUI\":true,\"id\":\"34bd979a-2eb5-4da5-9b92-0b340f778239\",\"description\":\"Real hours\",\"key\":\"realWorkingHours\",\"label\":\"Real working hours\",\"placeholder\":\"How many hours do your work the last day?\",\"zone\":\"context\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"set title\",\"code\":\"const today = moment().format(\\\"YYYY-MM-DD\\\");\\ncontext.today = today;\\nnote.setTitle(today);\\ncontent.modify(\\\"today\\\",today);\\n\\nconst nextDay = moment().add('days', 1).format(\\\"YYYY-MM-DD\\\");\\ncontent.modify(\\\"nextDay\\\",nextDay);\",\"id\":\"42ce77f6-7802-4a98-893f-78492a2cda37\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"find notes to archive\",\"code\":\"const currentFolder = app.vault.getAbstractFileByPath(note.getTargetFolder());\\ncontext.currentYearString = new Date().getFullYear().toString();\\n// Obtain all the notes of the folder (not recursive folders)\\ncontext.notesToArchive = currentFolder.children\\n  .filter(a => a.basename!==undefined)\\n  .sort((a,b) => b.basename.localeCompare(a.basename));\\ncontext.FOLDER_REGEX =/\\\\/[^\\\\/]+$/;\",\"id\":\"2d56c6e3-408f-430f-9867-0444243379cf\"},{\"type\":\"script\",\"hasUI\":false,\"id\":\"8da35c9f-bd25-4f7a-924d-b37a77b2aa54\",\"description\":\"Edit last day note\",\"code\":\"if(context.notesToArchive.length>0){\\n  const lastDayFile = context.notesToArchive.first();\\n  content.modify(\\\"previousDay\\\",lastDayFile.basename);\\n  await app.fileManager\\n     .processFrontMatter(lastDayFile, (frontmatter) => {\\n       frontmatter.realWorkingHours=context.realWorkingHours;\\n     });\\n  let lastDayContent = await app.vault.read(lastDayFile);\\n  const NEXT_DAY_REGEX = /\\\\[\\\\[\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|Next day\\\\]\\\\]/;\\n  lastDayContent = lastDayContent.replaceAll(new RegExp(NEXT_DAY_REGEX, 'g'),`[[${context.today}|Next day]]`);\\n  await app.vault.modify(lastDayFile,lastDayContent);\\n}else{\\n  content.modify(\\n    \\\"previousDay\\\",\\n    moment().subtract(1, \\\"days\\\").format(\\\"YYYY-MM-DD\\\")\\n  );\\n}\"},{\"type\":\"script\",\"hasUI\":false,\"description\":\"archive notes\",\"code\":\"const baseFolder = note.getTargetFolder()+\\\"/\\\"+context.currentYearString;\\n// Create the folder if it does not exist\\nif (!await app.vault.adapter.exists(baseFolder)) {\\n  await app.vault.createFolder(baseFolder);\\n}\\n\\n// func to be called on loop\\nasync function archiveFiles(abstractFile){\\n\\tconst currentPathFolder = \\n    abstractFile.path.replace(context.FOLDER_REGEX, '');\\n\\tconst destinationPath = currentPathFolder + \\\"/\\\" + context.currentYearString + \\\"/\\\" \\n     + abstractFile.basename + \\\".\\\" + abstractFile.extension;\\n\\tapp.vault.rename(\\n\\t  abstractFile,\\n\\t  destinationPath\\n\\t);\\n}\\n\\ncontext.notesToArchive\\n  .forEach(\\n\\tfile => archiveFiles(file)\\n);\",\"id\":\"c4161508-2372-469e-9f24-c14445e0438f\"}],\"label\":\"daily actions\",\"childrenHeader\":\"\",\"targetFolder\":\"Daily\"}","x":241,"y":-940,"width":250,"height":50}
	],
	"edges":[
		{"id":"31586cccc0d2f2aa","fromNode":"59fcfd179cd2455c","fromSide":"right","toNode":"905fabf82d23102c","toSide":"left","label":"Tooltip of idea"},
		{"id":"4ba8dd3ebe3b6e9f","fromNode":"abf3e213616b46a6","fromSide":"right","toNode":"8c82b7abd6cf87b6","toSide":"left"},
		{"id":"96584593544d6059","fromNode":"905fabf82d23102c","fromSide":"right","toNode":"3a191bd28ace9174","toSide":"left"},
		{"id":"5da930c67baad6c7","fromNode":"59fcfd179cd2455c","fromSide":"right","toNode":"abf3e213616b46a6","toSide":"left","label":"Tooltip of meeting"},
		{"id":"49ac561af9d0a928","fromNode":"59fcfd179cd2455c","fromSide":"right","toNode":"0fa3ad4f6c59ec01","toSide":"left","label":"Tooltip of event"},
		{"id":"65b458f983a6d07f","fromNode":"905fabf82d23102c","fromSide":"right","toNode":"f7c2b6af9c582d33","toSide":"left"},
		{"id":"d96f233538271aca","fromNode":"16c915c7a25378eb","fromSide":"right","toNode":"46a5e54f5a9db71a","toSide":"left","label":"Embed action"},
		{"id":"3e1a4dfa97c00a40","fromNode":"6f8c1e8e4db48802","fromSide":"right","toNode":"ab4d5a15cffc7de3","toSide":"left"},
		{"id":"f1e9bb38378a3784","fromNode":"6f8c1e8e4db48802","fromSide":"right","toNode":"01e0bfcb96a5943c","toSide":"left"},
		{"id":"450602bf4bb0ed68","fromNode":"50233447a3a23290","fromSide":"right","toNode":"f773b830c3d20fbf","toSide":"left"},
		{"id":"dbde5399d7f80a48","fromNode":"59fcfd179cd2455c","fromSide":"right","toNode":"50233447a3a23290","toSide":"left","label":"Tooltip of daily"}
	]
}